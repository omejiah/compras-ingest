plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
	id "io.swagger.core.v3.swagger-gradle-plugin" version "2.1.10"
	id 'io.freefair.lombok' version '4.1.6'
}

group = 'com.installations'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
sonarqube {
    properties {
    	property "sonar.projectKey", "liverpool-compras-ingest"
    	property "sonar.host.url", "https://sonar.digisprint-lp.com"
    	property "sonar.organization", "liverpool"
    }
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.108.6'
	implementation group: 'com.google.cloud', name: 'spring-cloud-gcp-core', version: '2.0.0'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.9'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'com.google.cloud:google-cloud-pubsub'
	compileOnly "org.springframework.integration:spring-integration-core"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jacoco {
    toolVersion = "0.8.2"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestCoverageVerification {
  violationRules {
    rule {
      element = 'CLASS'      
      limit {
        minimum = 1
      }
      excludes = [
        'package.ClassA',
        'package.ClassB'
      ]    
    }
    rule { 
      limit {
        counter = 'INSTRUCTIONS' 
        value = 'COVEREDRATIO'
        minimum = 0.10
      } 
    }
  }
}
test {
	useJUnitPlatform()
}
